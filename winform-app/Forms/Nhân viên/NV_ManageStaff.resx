<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>